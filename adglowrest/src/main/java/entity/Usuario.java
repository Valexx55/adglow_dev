package entity;
// Generated 12-sep-2018 18:26:09 by Hibernate Tools 5.1.0.Alpha1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;

import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.GenericGenerator;
import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * Usuario generated by hbm2java
 */
@Entity(name = "usuario")//nombre para referir en HQL
@NamedQueries({
    @NamedQuery(name="Usuario.roles",
                query="FROM usuario u WHERE u.idusuario IN (SELECT ur.usuario.idusuario FROM usuario_rol ur WHERE ur.rol.idrol = :rol)"),
})
@Table(name = "usuario", catalog = "eapro", uniqueConstraints = @UniqueConstraint(columnNames = "nombre"))
public class Usuario implements java.io.Serializable {

	private Integer idusuario;
	private String nombre;
	private String pwd;
	//@JsonIgnore
	private Set<UsuarioRol> usuarioRols = new HashSet<UsuarioRol>(0);

	public Usuario() {
	}

	public Usuario(String nombre, String pwd) {
		this.nombre = nombre;
		this.pwd = pwd;
	}

	/*@Override
	public String toString() {
		// TODO Auto-generated method stub
		Iterator<UsuarioRol> it = this.usuarioRols.iterator();
		while (it.hasNext())
		{
			UsuarioRol ura = it.next();
			ur
		}
		return super.toString();
	}*/
	
	public Usuario(String nombre, String pwd, Set<UsuarioRol> usuarioRols) {
		this.nombre = nombre;
		this.pwd = pwd;
		this.usuarioRols = usuarioRols;
	}

	//generación AutoIncrement 
	
	/*@Id
	@GeneratedValue(strategy = IDENTITY)*/
	//generación secuencia propia
	@Id
	@GenericGenerator(name = "mi_user_id", strategy = "entity.UsuariosIdGen")
	@GeneratedValue(strategy =GenerationType.SEQUENCE, generator = "mi_user_id")  

	@Column(name = "idusuario", unique = true, nullable = false)
	public Integer getIdusuario() {
		return this.idusuario;
	}

	public void setIdusuario(Integer idusuario) {
		this.idusuario = idusuario;
	}

	@Column(name = "nombre", unique = true, nullable = false, length = 45)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "pwd", nullable = false, length = 45)
	public String getPwd() {
		return this.pwd;
	}

	public void setPwd(String pwd) {
		this.pwd = pwd;
	}

	@OneToMany(cascade={CascadeType.ALL}, fetch = FetchType.EAGER, mappedBy = "usuario")
	public Set<UsuarioRol> getUsuarioRols() {
		return this.usuarioRols;
	}
//CON LAZY
	/*Hibernate: select usuario0_.idusuario as idusuari1_1_0_, usuario0_.nombre as nombre2_1_0_, usuario0_.pwd as pwd3_1_0_ from usuario usuario0_ where usuario0_.idusuario=?
			Respuesta <200 OK,entity.Usuario@5167f108,{}>*/
	
	//CON EAGER
	/*
	 *Hibernate: select usuario0_.idusuario as idusuari1_1_0_, usuario0_.nombre as nombre2_1_0_, usuario0_.pwd as pwd3_1_0_, usuariorol1_.id_usuario as id_usuar3_2_1_, usuariorol1_.idusuario_rol as idusuari1_2_1_, usuariorol1_.idusuario_rol as idusuari1_2_2_, usuariorol1_.id_rol as id_rol2_2_2_, usuariorol1_.id_usuario as id_usuar3_2_2_, rol2_.idrol as idrol1_0_3_, rol2_.nombre as nombre2_0_3_ from usuario usuario0_ left outer join usuario_rol usuariorol1_ on usuario0_.idusuario=usuariorol1_.id_usuario left outer join rol rol2_ on usuariorol1_.id_rol=rol2_.idrol where usuario0_.idusuario=?
Respuesta <200 OK,entity.Usuario@51a84426,{}> 
	 */
	public void setUsuarioRols(Set<UsuarioRol> usuarioRols) {
		this.usuarioRols = usuarioRols;
	}

}
